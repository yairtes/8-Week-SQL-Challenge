# üçï Case Study #2 - Pizza Runner

## Solution B.Runner And Customer Experience

### 1. How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)

````sql
SELECT 
  DATEPART(WEEK, registration_date) AS registration_week,
  COUNT(runner_id) AS runner_sign
FROM runners
GROUP BY DATEPART(WEEK, registration_date)
````

#### Answer:

weeks | total
-- | --
1 | 2
2 | 1
3 | 1

***

### 2. What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?

````sql
SELECT runner_id, AVG(DATEDIFF(MINUTE, order_time, pickup_time)) AS AvgTime
FROM #temp_customer_orders co JOIN #temp_runner_orders ro
	 ON co.order_id = ro.order_id
WHERE duration IS NOT NULL
GROUP BY runner_id
````
#### Answer:

runner_id | AvgTime
-- | --
1 | 15
2 | 24
3 | 10

***
### 3. Is there any relationship between the number of pizzas and how long the order takes to prepare?


````sql
WITH CTE_Pizza_amount AS
	(
	SELECT co.order_id, AVG(DATEDIFF(MINUTE, order_time, pickup_time)) AS AvgTime, COUNT(co.order_id) '# Of Pizzas'
	FROM #temp_customer_orders co JOIN #temp_runner_orders ro
		 ON co.order_id = ro.order_id
	WHERE duration IS NOT NULL
	GROUP BY co.order_id
	)
	SELECT [# Of Pizzas], AVG(avgtime) AvgMakingTime
	FROM CTE_Pizza_amount
	GROUP BY [# Of Pizzas]
````
#### Answer:

# Of Pizzas | AvgTime
-- | --
1 | 12
2 | 18
3 | 30

#### For 1 pizza Avg of 12 Minutes making per pizza <br/>
#### For 2 pizza Avg of 9 Minutes making per pizza <br/>
#### For 3 pizza Avg of 10 Minutes making per pizza <br/>
#### So the ulimate efficiency rate is for 2 pizza's <br/>

***
### 4. How many of each type of pizza was delivered?

````sql
SELECT pizza_name, COUNT(co.pizza_id) 'delivered'
FROM #temp_customer_orders co JOIN pizza_names pn
	 ON co.pizza_id = pn.pizza_id
	 JOIN #temp_runner_orders ro
	 ON co.order_id = ro.order_id
WHERE duration IS NOT NULL
GROUP BY pizza_name
````

#### Answer:
pizza_name | delivered
-- | --
Meatlovers | 9
Vegetarian | 3

***

### 5. How many Vegetarian and Meatlovers were ordered by each customer?**

````sql
SELECT customer_id, pizza_name, COUNT(*) '# Of Pizza Ordered'
FROM #temp_customer_orders co JOIN pizza_names pn
	 ON co.pizza_id = pn.pizza_id
GROUP BY customer_id, pizza_name
ORDER BY pizza_name

````

**Answer:**

customer_id | pizza_name| # Of Pizza Ordered
-- | -- | --
101|	Meatlovers|	2
102|  Meatlovers|	2
103|	Meatlovers|	3
104|	Meatlovers|	3
101|	Vegetarian|	1
102|	Vegetarian|	1
103|	Vegetarian|	1
105|	Vegetarian|	1

***

### 6. What was the maximum number of pizzas delivered in a single order?

````sql
SELECT TOP 1 co.order_id, COUNT(co.order_id) '# Of pizza'
FROM #temp_customer_orders co JOIN #temp_runner_orders ro
	 ON co.order_id = ro.order_id
WHERE duration IS NOT NULL
GROUP BY co.order_id
ORDER BY '# Of pizza' DESC
````

**Answer:**

order_id|# Of pizza|
|---|---------|
|4|    3    |

***

### 7. For each customer, how many delivered pizzas had at least 1 change and how many had no changes?

````sql
WITH CTE_changes AS
	(
	SELECT customer_id,
		CASE WHEN exclusions = ' ' AND extras = ' ' THEN 'No Change' ELSE 'at least 1 change' END AS 'Changes'
	FROM #temp_customer_orders co JOIN pizza_recipes pr
		 ON co.pizza_id = pr.pizza_id
		 JOIN #temp_runner_orders ro
		 ON ro.order_id = co.order_id
	WHERE distance IS NOT NULL
	)
	SELECT customer_id, changes, COUNT(changes) '# Of Changes'
	FROM CTE_changes
	GROUP BY customer_id,changes
	 
````

**Answer:**

customer_id | changes| # Of Changes
-- | -- | --
101	|No Change	|2
102	|No Change	|3
103	|at least 1 change	|3
104	|at least 1 change	|2
104	|No Change	|1
105	|at least 1 change	|1

***

### 8. How many pizzas were delivered that had both exclusions and extras?

````sql
SELECT 
	SUM(CASE WHEN exclusions <> ' ' AND extras <> ' ' THEN 1 ELSE 0 END) AS 'HasBoth'
FROM #temp_customer_orders co JOIN pizza_recipes pr
	ON co.pizza_id = pr.pizza_id
	JOIN #temp_runner_orders ro
	ON ro.order_id = co.order_id
WHERE distance IS NOT NULL 
````

**Answer:**

|HasBoth|
|---------|
|    1    |

***

### 9. What was the total volume of pizzas ordered for each hour of the day?

````sql
SELECT DATEPART(hour,order_time) AS Hour, COUNT(order_id) '# Of Pizza Orderd'
FROM #temp_customer_orders co JOIN pizza_recipes pr
	ON co.pizza_id = pr.pizza_id
GROUP BY DATEPART(hour,order_time)
````

**Answer:**

Hour | # Of Pizza Orderd
-- | --
11 | 1
13 | 3
18 | 3
19 | 1
21 | 3
23 | 3

***

### 10. What was the volume of orders for each day of the week?

````sql
SELECT DATENAME(WEEKDAY,order_time) AS 'Day Of Week', COUNT(order_id) '# Of Orders'
FROM #temp_customer_orders co JOIN pizza_recipes pr
	ON co.pizza_id = pr.pizza_id
GROUP BY DATENAME(WEEKDAY,order_time)
````

**Answer:**

Day Of Week | # Of Orders
-- | --
Friday	|1
Saturday	|5
Thursday	|3
Wednesday	|5

